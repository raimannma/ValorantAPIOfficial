[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "valo_api_official"
version = "1.0.1"
description = "Valorant API Wrapper"
readme = "README.md"
authors = ["Manuel Raimann <raimannma@outlook.de>"]
license = "MIT"
repository = "https://github.com/raimannma/ValorantAPIOfficial"
homepage = "https://github.com/raimannma/ValorantAPIOfficial"

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.28.1"
msgspec = ">=0.12,<0.15"

[tool.poetry.dev-dependencies]
bandit = "^1.7.5"
black = {version = "^22.12.0", allow-prereleases = true}
darglint = "^1.8.1"
isort = {extras = ["colors"], version = "^5.12.0"}
mypy = "^1.2"
mypy-extensions = "^1.0.0"
pre-commit = "^3.3.1"
pydocstyle = "^6.3.0"
pylint = "^2.17.4"
pytest = "^7.3.1"
hypothesis = "^6.75.2"
pyupgrade = "^3.4.0"
safety = "^2.3.5"
pytest-html = "^3.2.0"
pytest-cov = "^4.0.0"
Sphinx = "^6.2.1"
sphinxcontrib-applehelp = "^1.0.4"
sphinxcontrib-devhelp = "^1.0.2"
sphinxcontrib-htmlhelp = "^2.0.1"
sphinxcontrib-jsmath = "^1.0.1"
sphinxcontrib-qthelp = "^1.0.3"
sphinxcontrib-serializinghtml = "^1.1.5"
sphinx-rtd-theme = "^1.2.0"
sphinx-autodoc-typehints = "^1.23"
autodocsumm = "^0.2.11"
responses = "^0.23.1"
pytest-parallel = "^0.1.1"
pytest-split = "^0.8.1"
tomlkit = "<0.11.9"
colorama = "^0.4.6"


[tool.black]
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
py_version = 38
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true


[tool.pytest.ini_options]
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "valo_api_official"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
